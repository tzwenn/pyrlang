[25da7f7a7f69d] {jit-backend-counts
[25da7f7a8884e] jit-backend-counts}
[25da7f80990d5] {jit-log-opt-loop
# Loop 0 (3 LABEL) : loop with 111 ops
[i0, i1, i2, p3, p4, p5]
+129: p6 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.register.X_Register.inst_regs 16>)
+140: p8 = getarrayitem_gc(p6, 0, descr=<ArrayP 8>)
+144: p10 = getarrayitem_gc(p6, 1, descr=<ArrayP 8>)
+148: p12 = getarrayitem_gc(p6, 2, descr=<ArrayP 8>)
+152: p14 = getarrayitem_gc(p6, 3, descr=<ArrayP 8>)
+156: p16 = getarrayitem_gc(p6, 4, descr=<ArrayP 8>)
+160: p18 = getarrayitem_gc(p6, 5, descr=<ArrayP 8>)
+164: p20 = getarrayitem_gc(p6, 6, descr=<ArrayP 8>)
+168: p22 = getarrayitem_gc(p6, 7, descr=<ArrayP 8>)
+172: p24 = getarrayitem_gc(p6, 8, descr=<ArrayP 8>)
+176: p26 = getarrayitem_gc(p6, 9, descr=<ArrayP 8>)
+180: p28 = getarrayitem_gc(p6, 10, descr=<ArrayP 8>)
+184: p30 = getarrayitem_gc(p6, 11, descr=<ArrayP 8>)
+195: p32 = getarrayitem_gc(p6, 12, descr=<ArrayP 8>)
+206: p34 = getarrayitem_gc(p6, 13, descr=<ArrayP 8>)
+217: p36 = getarrayitem_gc(p6, 14, descr=<ArrayP 8>)
+231: p38 = getarrayitem_gc(p6, 15, descr=<ArrayP 8>)
+245: label(i0, i1, i2, p3, p4, p5, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, descr=TargetToken(4318388336))
debug_merge_point(0, 0, '3 LABEL')
+328: p39 = getfield_gc(p3, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '4 IS_INTEGER')
+339: p40 = getfield_gc(p3, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+343: i41 = ptr_eq(p40, p4)
guard_true(i41, descr=<Guard0x101658020>) [i2, i1, i0, p4, p3, p40, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38]
+352: guard_nonnull_class(p8, 4297733936, descr=<Guard0x101658db0>) [i2, i1, i0, p4, p3, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38]
debug_merge_point(0, 0, '5 SELECT_VAL')
+370: i43 = getfield_gc_pure(p8, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+374: i45 = int_eq(i43, 1)
guard_false(i45, descr=<Guard0x101658d40>) [i2, i1, i0, p4, p3, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38]
+384: i47 = int_eq(i43, 0)
guard_false(i47, descr=<Guard0x101658cd0>) [i2, i1, i0, p4, p3, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38]
debug_merge_point(0, 0, '9 LABEL')
debug_merge_point(0, 0, '10 ALLOCATE_ZERO')
+394: p48 = getfield_gc(p3, descr=<FieldP pyrlang.interpreter.interp.Process.inst_scheduler 48>)
+398: p49 = getfield_gc_pure(p48, descr=<FieldP pyrlang.interpreter.scheduler.Scheduler.inst_const0 8>)
+402: p50 = getfield_gc(p39, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
debug_merge_point(0, 0, '11 LINE')
debug_merge_point(0, 0, '12 GC_BIF2')
+447: setfield_gc(ConstPtr(ptr51), p3, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+460: i53 = int_sub_ovf(i43, 1)
guard_no_overflow(descr=<Guard0x101658c60>) [i2, i1, i0, p4, p3, i53, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p50, p49, p39]
debug_merge_point(0, 0, '13 MOVE')
debug_merge_point(0, 0, '14 MOVE')
debug_merge_point(0, 0, '15 LINE')
debug_merge_point(0, 0, '16 CALL')
+470: i55 = int_eq(17, i0)
guard_true(i55, descr=<Guard0x101658bf0>) [i0, i2, i1, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p8, i53, p50, None, p39]
+484: p57 = getfield_gc(p3, descr=<FieldP pyrlang.interpreter.interp.Process.inst_frame_cache 16>)
+488: p58 = getfield_gc_pure(p57, descr=<FieldP pyrlang.interpreter.frame_cache.FrameCache.inst_cache 8>)
+493: i59 = arraylen_gc(p58, descr=<ArrayP 8>)
+497: i61 = int_ge(0, i59)
guard_false(i61, descr=<Guard0x101658b80>) [i2, i1, p4, p3, p58, p57, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p8, i53, p50, None, p39]
+507: p62 = getarrayitem_gc_pure(p58, 0, descr=<ArrayP 8>)
+511: guard_nonnull(p62, descr=<Guard0x101658b10>) [i2, i1, p4, p3, p62, p58, p57, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p8, i53, p50, None, p39]
+520: i63 = getfield_gc_pure(p62, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+524: i64 = int_eq(i63, 17)
guard_true(i64, descr=<Guard0x101658aa0>) [i2, i1, p4, p3, p62, p58, p57, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p8, i53, p50, None, p39]
+534: p65 = getfield_gc_pure(p62, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+538: i67 = instance_ptr_eq(p65, ConstPtr(ptr66))
guard_true(i67, descr=<Guard0x101658a30>) [i2, i1, p4, p3, p62, p58, p57, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p8, i53, p50, None, p39]
+557: p68 = getfield_gc_pure(p65, descr=<FieldP pyrlang.rpybeam.beam_code.CodeParser.inst_labelTable 96>)
+561: i70 = getarrayitem_gc_pure(p68, 1, descr=<ArrayS 8>)
+566: i72 = int_sub(i1, 1)
+577: guard_false(i2, descr=<Guard0x1016589c0>) [i72, i70, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p62, p8, i53, p50, None, p39]
+593: i74 = int_le(i72, 0)
guard_false(i74, descr=<Guard0x101658950>) [i72, i70, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p62, p8, i53, p50, None, p39]
+603: guard_value(i70, 3, descr=<Guard0x1016588e0>) [i72, i70, p39, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p62, p8, i53, p50, None, None]
debug_merge_point(0, 0, '3 LABEL')
p77 = new_with_vtable(4297733088)
p79 = new_with_vtable(4297733088)
+710: setfield_gc(p79, p50, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+714: setfield_gc(p79, p8, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+718: setfield_gc(p77, p79, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+722: setfield_gc(p77, p62, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+755: setfield_gc(p39, p77, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+759: p80 = same_as(p3)
+759: p81 = same_as(p39)
+762: label(i72, p3, p4, p39, i53, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p49, p81, p77, p62, p68, descr=TargetToken(4318388416))
debug_merge_point(0, 0, '3 LABEL')
debug_merge_point(0, 0, '4 IS_INTEGER')
debug_merge_point(0, 0, '5 SELECT_VAL')
+803: i82 = int_eq(i53, 1)
guard_false(i82, descr=<Guard0x101658870>) [i72, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i53]
+813: i83 = int_eq(i53, 0)
guard_false(i83, descr=<Guard0x101658800>) [i72, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i53]
debug_merge_point(0, 0, '9 LABEL')
debug_merge_point(0, 0, '10 ALLOCATE_ZERO')
debug_merge_point(0, 0, '11 LINE')
debug_merge_point(0, 0, '12 GC_BIF2')
+864: setfield_gc(ConstPtr(ptr51), p3, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+877: i84 = int_sub_ovf(i53, 1)
guard_no_overflow(descr=<Guard0x101658790>) [i72, p4, p3, i84, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p49, p81, p77, i53]
debug_merge_point(0, 0, '13 MOVE')
debug_merge_point(0, 0, '14 MOVE')
debug_merge_point(0, 0, '15 LINE')
debug_merge_point(0, 0, '16 CALL')
+890: i85 = int_sub(i72, 1)
+894: i86 = int_le(i85, 0)
guard_false(i86, descr=<Guard0x101658720>) [i85, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i84, p62, None, p81, p77, i53]
debug_merge_point(0, 0, '3 LABEL')
p87 = new_with_vtable(4297733088)
p88 = new_with_vtable(4297733088)
+1008: setfield_gc(p88, p77, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p90 = new_with_vtable(4297733936)
+1030: setfield_gc(p90, i53, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+1034: setfield_gc(p88, p90, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+1038: setfield_gc(p87, p88, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+1042: setfield_gc(p87, p62, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+1073: setfield_gc(p81, p87, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+1077: i91 = arraylen_gc(p68, descr=<ArrayS 8>)
+1077: jump(i85, p3, p4, p81, i84, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p49, p81, p87, p62, p68, descr=TargetToken(4318388416))
+1092: --end of the loop--
[25da7f8148ce9] jit-log-opt-loop}
[25da7f8846a9d] {jit-log-opt-bridge
# bridge out of Guard 0x101658870 with 112 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+59: p18 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '6 LABEL')
debug_merge_point(0, 0, '7 MOVE')
+63: p19 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+67: i20 = ptr_eq(p19, p1)
guard_true(i20, descr=<Guard0x101658e20>) [i0, p19, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
debug_merge_point(0, 0, '8 RETURN')
+80: p21 = getfield_gc(p18, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+84: guard_nonnull_class(p21, 4297733088, descr=<Guard0x10168a3a0>) [i0, p21, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+103: p23 = getfield_gc(p21, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+107: p24 = getfield_gc_pure(p21, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+111: p25 = getfield_gc_pure(p24, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+115: i26 = getfield_gc_pure(p24, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+141: setfield_gc(p18, p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+145: guard_value(i26, 17, descr=<Guard0x10168a330>) [i0, i26, p18, p1, p2, p25, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+155: guard_value(p25, ConstPtr(ptr28), descr=<Guard0x10168a2c0>) [i0, p18, p1, p2, p25, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
debug_merge_point(0, 0, '17 LINE')
debug_merge_point(0, 0, '18 GC_BIF2')
+174: p29 = getfield_gc_pure(p23, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+220: setfield_gc(ConstPtr(ptr30), p2, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+233: guard_class(p29, 4297733936, descr=<Guard0x10168a250>) [i0, p1, p2, p29, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+246: i32 = getfield_gc_pure(p29, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+250: i34 = int_sub_ovf(i32, 2)
guard_no_overflow(descr=<Guard0x10168a1e0>) [i0, p1, p2, i34, p29, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
debug_merge_point(0, 0, '19 MOVE')
+260: p35 = getfield_gc(p23, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+265: i37 = int_sub(i0, 1)
+269: i39 = int_le(i37, 0)
guard_false(i39, descr=<Guard0x10168a170>) [i37, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p35, p18, i34, None]
debug_merge_point(0, 0, '3 LABEL')
p42 = new_with_vtable(4297733088)
p44 = new_with_vtable(4297733088)
+376: setfield_gc(p44, p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+380: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+394: setfield_gc(p42, p44, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p47 = new_with_vtable(4297732952)
+410: setfield_gc(p47, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+418: setfield_gc(p47, ConstPtr(ptr49), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+432: setfield_gc(p42, p47, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+458: setfield_gc(p18, p42, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+462: p50 = same_as(p2)
+462: p51 = same_as(p18)
+465: label(i37, p2, p1, p18, i34, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p42, p51, descr=TargetToken(4318389136))
debug_merge_point(0, 0, '4 IS_INTEGER')
debug_merge_point(0, 0, '5 SELECT_VAL')
+485: i53 = int_eq(i34, 1)
guard_false(i53, descr=<Guard0x10168a100>) [i37, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i34]
+499: i55 = int_eq(i34, 0)
guard_true(i55, descr=<Guard0x10168a090>) [i37, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i34]
debug_merge_point(0, 0, '6 LABEL')
debug_merge_point(0, 0, '7 MOVE')
debug_merge_point(0, 0, '8 RETURN')
+513: p56 = getfield_gc(p42, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+517: p57 = getfield_gc_pure(p42, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+521: p58 = getfield_gc_pure(p57, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+525: i59 = getfield_gc_pure(p57, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+551: setfield_gc(p51, p56, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+555: guard_value(i59, 23, descr=<Guard0x10168a020>) [i37, i59, p51, p1, p2, p58, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, None]
+565: guard_value(p58, ConstPtr(ptr61), descr=<Guard0x101659f30>) [i37, p51, p1, p2, p58, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, None]
debug_merge_point(0, 0, '23 LINE')
debug_merge_point(0, 0, '24 GC_BIF2')
+584: p62 = getfield_gc_pure(p56, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+629: setfield_gc(ConstPtr(ptr63), p2, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+642: guard_class(p62, 4297733936, descr=<Guard0x101659ec0>) [i37, p1, p2, p62, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, None]
+654: i65 = getfield_gc_pure(p62, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+658: i67 = int_add_ovf(i65, 1)
guard_no_overflow(descr=<Guard0x101659e50>) [i37, p1, p2, i67, p62, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, None]
debug_merge_point(0, 0, '25 DEALLOCATE')
+668: p68 = getfield_gc(p56, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+672: setfield_gc(p51, p68, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+676: guard_nonnull_class(p68, 4297733088, descr=<Guard0x101659de0>) [i37, p68, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i67, None]
+694: p70 = getfield_gc(p68, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+698: p71 = getfield_gc_pure(p68, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+702: p72 = getfield_gc_pure(p71, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+706: i73 = getfield_gc_pure(p71, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+710: setfield_gc(p51, p70, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+714: guard_value(i73, 17, descr=<Guard0x101659d70>) [i37, i73, p51, p1, p2, p72, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i67, None]
+724: guard_value(p72, ConstPtr(ptr75), descr=<Guard0x101659d00>) [i37, p51, p1, p2, p72, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i67, None]
debug_merge_point(0, 0, '17 LINE')
debug_merge_point(0, 0, '18 GC_BIF2')
+743: p76 = getfield_gc_pure(p70, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+788: setfield_gc(ConstPtr(ptr77), p2, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+801: guard_class(p76, 4297733936, descr=<Guard0x101659c90>) [i37, p1, p2, p76, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i67, None]
+813: i79 = getfield_gc_pure(p76, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+817: i81 = int_sub_ovf(i79, 2)
guard_no_overflow(descr=<Guard0x101659c20>) [i37, p1, p2, i81, p76, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i67, None]
debug_merge_point(0, 0, '19 MOVE')
+827: p82 = getfield_gc(p70, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+831: i84 = int_sub(i37, 1)
+836: i86 = int_le(i84, 0)
guard_false(i86, descr=<Guard0x101659bb0>) [i84, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p51, i81, p82, i67, None]
debug_merge_point(0, 0, '3 LABEL')
p88 = new_with_vtable(4297733088)
p90 = new_with_vtable(4297733088)
+943: setfield_gc(p90, p82, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p92 = new_with_vtable(4297733936)
+966: setfield_gc(p92, i67, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+971: setfield_gc(p90, p92, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+975: setfield_gc(p88, p90, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p94 = new_with_vtable(4297732952)
+991: setfield_gc(p94, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+999: setfield_gc(p94, ConstPtr(ptr28), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+1013: setfield_gc(p88, p94, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+1039: setfield_gc(p51, p88, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+1043: jump(i84, p2, p1, p51, i81, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p88, p51, descr=TargetToken(4318389136))
+1065: --end of the loop--
[25da7f88d6999] jit-log-opt-bridge}
[25da7f8c1eb1f] {jit-log-opt-bridge
# bridge out of Guard 0x101658d40 with 47 ops
[i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+59: p21 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '6 LABEL')
debug_merge_point(0, 0, '7 MOVE')
+63: p22 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+67: i23 = ptr_eq(p22, p3)
guard_true(i23, descr=<Guard0x10168a410>) [i0, i1, i2, p22, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
debug_merge_point(0, 0, '8 RETURN')
+76: p24 = getfield_gc(p21, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+80: guard_nonnull_class(p24, 4297733088, descr=<Guard0x10168ac60>) [i2, i0, i1, p24, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+98: p26 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+102: p27 = getfield_gc_pure(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+106: p28 = getfield_gc_pure(p27, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+110: i29 = getfield_gc_pure(p27, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+136: setfield_gc(p21, p26, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+140: i31 = int_eq(9, i2)
guard_false(i31, descr=<Guard0x10168abf0>) [i2, i0, i1, i29, p3, p4, p28, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+154: guard_value(i29, 17, descr=<Guard0x10168ab80>) [i0, i1, i29, p21, p3, p4, p28, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+164: guard_value(p28, ConstPtr(ptr33), descr=<Guard0x10168ab10>) [i0, i1, p21, p3, p4, p28, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
debug_merge_point(0, 0, '17 LINE')
debug_merge_point(0, 0, '18 GC_BIF2')
+183: p34 = getfield_gc_pure(p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+228: setfield_gc(ConstPtr(ptr35), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+241: guard_class(p34, 4297733936, descr=<Guard0x10168aaa0>) [i0, i1, p3, p4, p34, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+253: i37 = getfield_gc_pure(p34, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+257: i39 = int_sub_ovf(i37, 2)
guard_no_overflow(descr=<Guard0x10168aa30>) [i0, i1, p3, p4, i39, p34, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
debug_merge_point(0, 0, '19 MOVE')
+267: p40 = getfield_gc(p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+271: i42 = int_sub(i1, 1)
+282: guard_false(i0, descr=<Guard0x10168a9c0>) [i42, p3, p4, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, i39, p40, p21]
+298: i44 = int_le(i42, 0)
guard_false(i44, descr=<Guard0x10168a950>) [i42, p3, p4, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, i39, p40, p21]
debug_merge_point(0, 0, '3 LABEL')
p46 = new_with_vtable(4297733088)
p48 = new_with_vtable(4297733088)
+398: setfield_gc(p48, p40, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+402: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+416: setfield_gc(p46, p48, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p51 = new_with_vtable(4297732952)
+431: setfield_gc(p51, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+439: setfield_gc(p51, ConstPtr(ptr53), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+453: setfield_gc(p46, p51, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+479: setfield_gc(p21, p46, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+483: jump(i42, p4, p3, p21, i39, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p46, p21, descr=TargetToken(4318389136))
+523: --end of the loop--
[25da7f8c669e0] jit-log-opt-bridge}
[25da7f8f2e5dc] {jit-log-opt-bridge
# bridge out of Guard 0x10168a100 with 66 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+59: p18 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '6 LABEL')
debug_merge_point(0, 0, '7 MOVE')
+63: p19 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+67: i20 = ptr_eq(p19, p1)
guard_true(i20, descr=<Guard0x10168acd0>) [i0, p19, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
debug_merge_point(0, 0, '8 RETURN')
+80: p21 = getfield_gc(p18, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+84: guard_nonnull_class(p21, 4297733088, descr=<Guard0x10168b830>) [i0, p21, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+103: p23 = getfield_gc(p21, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+107: p24 = getfield_gc_pure(p21, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+111: p25 = getfield_gc_pure(p24, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+115: i26 = getfield_gc_pure(p24, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+141: setfield_gc(p18, p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+145: guard_value(i26, 23, descr=<Guard0x10168b7c0>) [i0, i26, p18, p1, p2, p25, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+155: guard_value(p25, ConstPtr(ptr28), descr=<Guard0x10168b750>) [i0, p18, p1, p2, p25, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
debug_merge_point(0, 0, '23 LINE')
debug_merge_point(0, 0, '24 GC_BIF2')
+174: p29 = getfield_gc_pure(p23, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+219: setfield_gc(ConstPtr(ptr30), p2, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+232: guard_class(p29, 4297733936, descr=<Guard0x10168b6e0>) [i0, p1, p2, p29, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+245: i32 = getfield_gc_pure(p29, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+249: i34 = int_add_ovf(i32, 1)
guard_no_overflow(descr=<Guard0x10168b670>) [i0, p1, p2, i34, p29, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
debug_merge_point(0, 0, '25 DEALLOCATE')
+259: p35 = getfield_gc(p23, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+263: setfield_gc(p18, p35, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+267: guard_nonnull_class(p35, 4297733088, descr=<Guard0x10168b600>) [i0, p35, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i34, i17]
+286: p37 = getfield_gc(p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+290: p38 = getfield_gc_pure(p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+294: p39 = getfield_gc_pure(p38, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+298: i40 = getfield_gc_pure(p38, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+302: setfield_gc(p18, p37, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+306: guard_value(i40, 17, descr=<Guard0x10168b590>) [i0, i40, p18, p1, p2, p39, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i34, i17]
+316: guard_value(p39, ConstPtr(ptr42), descr=<Guard0x10168b520>) [i0, p18, p1, p2, p39, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i34, i17]
debug_merge_point(0, 0, '17 LINE')
debug_merge_point(0, 0, '18 GC_BIF2')
+335: p43 = getfield_gc_pure(p37, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+380: setfield_gc(ConstPtr(ptr44), p2, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+393: guard_class(p43, 4297733936, descr=<Guard0x10168b4b0>) [i0, p1, p2, p43, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i34, i17]
+406: i46 = getfield_gc_pure(p43, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+410: i48 = int_sub_ovf(i46, 2)
guard_no_overflow(descr=<Guard0x10168b440>) [i0, p1, p2, i48, p43, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i34, i17]
debug_merge_point(0, 0, '19 MOVE')
+420: p49 = getfield_gc(p37, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+424: i51 = int_sub(i0, 1)
+429: i53 = int_le(i51, 0)
guard_false(i53, descr=<Guard0x10168b3d0>) [i51, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i48, p18, p49, i34, None]
debug_merge_point(0, 0, '3 LABEL')
p56 = new_with_vtable(4297733088)
p58 = new_with_vtable(4297733088)
+536: setfield_gc(p58, p49, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p60 = new_with_vtable(4297733936)
+551: setfield_gc(p60, i34, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+555: setfield_gc(p58, p60, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+559: setfield_gc(p56, p58, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p62 = new_with_vtable(4297732952)
+574: setfield_gc(p62, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+582: setfield_gc(p62, ConstPtr(ptr64), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+596: setfield_gc(p56, p62, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+622: setfield_gc(p18, p56, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+626: jump(i51, p2, p1, p18, i48, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p56, p18, descr=TargetToken(4318389136))
+652: --end of the loop--
[25da7f8f89d58] jit-log-opt-bridge}
[25da7f921ff7b] {jit-log-opt-loop
# Loop 1 (17 LINE) : entry bridge with 53 ops
[i0, i1, i2, p3, p4, p5]
+129: p6 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.register.X_Register.inst_regs 16>)
+140: p8 = getarrayitem_gc(p6, 0, descr=<ArrayP 8>)
+144: p10 = getarrayitem_gc(p6, 1, descr=<ArrayP 8>)
+148: p12 = getarrayitem_gc(p6, 2, descr=<ArrayP 8>)
+152: p14 = getarrayitem_gc(p6, 3, descr=<ArrayP 8>)
+156: p16 = getarrayitem_gc(p6, 4, descr=<ArrayP 8>)
+160: p18 = getarrayitem_gc(p6, 5, descr=<ArrayP 8>)
+164: p20 = getarrayitem_gc(p6, 6, descr=<ArrayP 8>)
+168: p22 = getarrayitem_gc(p6, 7, descr=<ArrayP 8>)
+172: p24 = getarrayitem_gc(p6, 8, descr=<ArrayP 8>)
+176: p26 = getarrayitem_gc(p6, 9, descr=<ArrayP 8>)
+180: p28 = getarrayitem_gc(p6, 10, descr=<ArrayP 8>)
+184: p30 = getarrayitem_gc(p6, 11, descr=<ArrayP 8>)
+195: p32 = getarrayitem_gc(p6, 12, descr=<ArrayP 8>)
+206: p34 = getarrayitem_gc(p6, 13, descr=<ArrayP 8>)
+217: p36 = getarrayitem_gc(p6, 14, descr=<ArrayP 8>)
+231: p38 = getarrayitem_gc(p6, 15, descr=<ArrayP 8>)
debug_merge_point(0, 0, '17 LINE')
+245: p39 = getfield_gc(p3, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '18 GC_BIF2')
+263: p40 = getfield_gc(p39, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+274: p41 = getfield_gc_pure(p40, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+327: setfield_gc(ConstPtr(ptr42), p3, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+340: guard_class(p41, 4297733936, descr=<Guard0x10168b8a0>) [i2, i1, i0, p4, p3, p41, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38]
+352: i44 = getfield_gc_pure(p41, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+363: i46 = int_sub_ovf(i44, 2)
guard_no_overflow(descr=<Guard0x10168bde0>) [i2, i1, i0, p4, p3, i46, p41, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38]
+373: p47 = getfield_gc(p3, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+377: i48 = ptr_eq(p47, p4)
guard_true(i48, descr=<Guard0x10168bd70>) [i2, i1, i0, p4, p3, p47, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i46]
debug_merge_point(0, 0, '19 MOVE')
+386: p49 = getfield_gc(p40, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+391: i51 = int_eq(23, i0)
guard_false(i51, descr=<Guard0x10168bd00>) [i0, i2, i1, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p8, p39, p49, i46]
+405: i53 = int_sub(i1, 1)
+416: guard_false(i2, descr=<Guard0x10168bc90>) [i0, i53, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p8, p39, p49, i46]
+432: i55 = int_le(i53, 0)
guard_false(i55, descr=<Guard0x10168bc20>) [i0, i53, p4, p3, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p8, p39, p49, i46]
debug_merge_point(0, 0, '3 LABEL')
p57 = new_with_vtable(4297733088)
p59 = new_with_vtable(4297733088)
+532: setfield_gc(p59, p49, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+536: setfield_gc(p59, p8, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+540: setfield_gc(p57, p59, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p61 = new_with_vtable(4297732952)
+555: setfield_gc(p61, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+563: setfield_gc(p61, ConstPtr(ptr62), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+577: setfield_gc(p57, p61, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+608: setfield_gc(p39, p57, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+612: jump(i53, p3, p4, p39, i46, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p57, p39, descr=TargetToken(4318389136))
+810: --end of the loop--
[25da7f92774ca] jit-log-opt-loop}
[25da7f954dfc5] {jit-log-opt-bridge
# bridge out of Guard 0x10168a090 with 57 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17]
+59: p18 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '9 LABEL')
debug_merge_point(0, 0, '10 ALLOCATE_ZERO')
+63: p19 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_scheduler 48>)
+67: p20 = getfield_gc_pure(p19, descr=<FieldP pyrlang.interpreter.scheduler.Scheduler.inst_const0 8>)
+71: p21 = getfield_gc(p18, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
debug_merge_point(0, 0, '11 LINE')
debug_merge_point(0, 0, '12 GC_BIF2')
+75: p22 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+79: i23 = ptr_eq(p22, p1)
guard_true(i23, descr=<Guard0x10168be50>) [i0, p1, p2, p22, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p21, p20, p18, i17]
+133: setfield_gc(ConstPtr(ptr24), p2, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+146: i26 = int_sub_ovf(i17, 1)
guard_no_overflow(descr=<Guard0x1016b25d0>) [i0, p1, p2, i26, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p21, p20, p18, i17]
debug_merge_point(0, 0, '13 MOVE')
debug_merge_point(0, 0, '14 MOVE')
debug_merge_point(0, 0, '15 LINE')
debug_merge_point(0, 0, '16 CALL')
+163: i28 = int_sub(i0, 1)
+168: i30 = int_le(i28, 0)
guard_false(i30, descr=<Guard0x1016b2560>) [i28, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26, p21, None, p18, i17]
debug_merge_point(0, 0, '3 LABEL')
p33 = new_with_vtable(4297733088)
p35 = new_with_vtable(4297733088)
+268: setfield_gc(p35, p21, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p37 = new_with_vtable(4297733936)
+283: setfield_gc(p37, i17, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+294: setfield_gc(p35, p37, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+298: setfield_gc(p33, p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p39 = new_with_vtable(4297732952)
+313: setfield_gc(p39, 17, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+321: setfield_gc(p39, ConstPtr(ptr41), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+335: setfield_gc(p33, p39, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+361: setfield_gc(p18, p33, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+365: p42 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_frame_cache 16>)
+369: guard_nonnull(p42, descr=<Guard0x1016b24f0>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+378: p43 = getfield_gc_pure(p42, descr=<FieldP pyrlang.interpreter.frame_cache.FrameCache.inst_cache 8>)
+382: guard_nonnull(p43, descr=<Guard0x1016b2480>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+391: i44 = arraylen_gc(p43, descr=<ArrayP 8>)
+395: i46 = int_ge(i44, 1)
guard_true(i46, descr=<Guard0x1016b2410>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+405: p48 = getarrayitem_gc_pure(p43, 0, descr=<ArrayP 8>)
+409: guard_nonnull(p48, descr=<Guard0x1016b23a0>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+418: i49 = getfield_gc_pure(p48, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+422: guard_value(i49, 17, descr=<Guard0x1016b2330>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+432: p51 = getfield_gc_pure(p48, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+436: guard_nonnull(p51, descr=<Guard0x1016b22c0>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+445: i53 = instance_ptr_eq(p51, ConstPtr(ptr52))
guard_true(i53, descr=<Guard0x1016b2250>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+464: p54 = getfield_gc_pure(p51, descr=<FieldP pyrlang.rpybeam.beam_code.CodeParser.inst_labelTable 96>)
+468: guard_nonnull(p54, descr=<Guard0x1016b21e0>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+477: i55 = arraylen_gc(p54, descr=<ArrayS 8>)
+482: i57 = int_ge(i55, 2)
guard_true(i57, descr=<Guard0x1016b2170>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+492: i59 = getarrayitem_gc_pure(p54, 1, descr=<ArrayS 8>)
+497: guard_value(i59, 3, descr=<Guard0x1016b2100>) [i28, p18, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i26]
+507: jump(i28, p2, p1, p18, i26, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p20, p18, p33, p48, p54, descr=TargetToken(4318388416))
+550: --end of the loop--
[25da7f95ac891] jit-log-opt-bridge}
[25da7f98d3ca9] {jit-log-opt-bridge
# bridge out of Guard 0x101659d70 with 57 ops
[i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+59: guard_value(i1, 23, descr=<Guard0x1016b2640>) [i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+69: guard_value(p5, ConstPtr(ptr22), descr=<Guard0x1016b3210>) [i0, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
debug_merge_point(0, 0, '23 LINE')
+88: p23 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '24 GC_BIF2')
+92: p24 = getfield_gc(p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+96: p25 = getfield_gc_pure(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+100: p26 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+104: i27 = ptr_eq(p26, p3)
guard_true(i27, descr=<Guard0x1016b31a0>) [i0, p3, p4, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p25, i20]
+158: setfield_gc(ConstPtr(ptr28), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+171: guard_class(p25, 4297733936, descr=<Guard0x1016b3130>) [i0, p3, p4, p25, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, None, i20]
+184: i31 = getfield_gc_pure(p25, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+188: i32 = int_add_ovf(i31, i20)
guard_no_overflow(descr=<Guard0x1016b30c0>) [i0, p3, p4, i32, p25, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, None, i20]
debug_merge_point(0, 0, '25 DEALLOCATE')
+197: p33 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+221: setfield_gc(p23, p33, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+225: guard_nonnull_class(p33, 4297733088, descr=<Guard0x1016b3050>) [i0, p33, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
+244: p35 = getfield_gc(p33, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+248: p36 = getfield_gc_pure(p33, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+252: p37 = getfield_gc_pure(p36, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+256: i38 = getfield_gc_pure(p36, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+260: setfield_gc(p23, p35, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+264: guard_value(i38, 17, descr=<Guard0x1016b2fe0>) [i0, i38, p23, p3, p4, p37, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
+274: guard_value(p37, ConstPtr(ptr40), descr=<Guard0x1016b2f70>) [i0, p23, p3, p4, p37, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
debug_merge_point(0, 0, '17 LINE')
debug_merge_point(0, 0, '18 GC_BIF2')
+293: p41 = getfield_gc_pure(p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+338: setfield_gc(ConstPtr(ptr42), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+351: guard_class(p41, 4297733936, descr=<Guard0x1016b2f00>) [i0, p3, p4, p41, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
+364: i44 = getfield_gc_pure(p41, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+368: i46 = int_sub_ovf(i44, 2)
guard_no_overflow(descr=<Guard0x1016b2e90>) [i0, p3, p4, i46, p41, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
debug_merge_point(0, 0, '19 MOVE')
+378: p47 = getfield_gc(p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+382: i49 = int_sub(i0, 1)
+387: i51 = int_le(i49, 0)
guard_false(i51, descr=<Guard0x1016b2e20>) [i49, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i46, p23, p47, i32, None, None]
debug_merge_point(0, 0, '3 LABEL')
p53 = new_with_vtable(4297733088)
p55 = new_with_vtable(4297733088)
+494: setfield_gc(p55, p47, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p57 = new_with_vtable(4297733936)
+509: setfield_gc(p57, i32, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+513: setfield_gc(p55, p57, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+517: setfield_gc(p53, p55, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p59 = new_with_vtable(4297732952)
+532: setfield_gc(p59, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+540: setfield_gc(p59, ConstPtr(ptr22), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+554: setfield_gc(p53, p59, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+585: setfield_gc(p23, p53, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+589: jump(i49, p4, p3, p23, i46, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p53, p23, descr=TargetToken(4318389136))
+622: --end of the loop--
[25da7f9924ee5] jit-log-opt-bridge}
[25da7f9bf10a0] {jit-log-opt-bridge
# bridge out of Guard 0x10168b590 with 76 ops
[i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+59: guard_value(i1, 23, descr=<Guard0x1016b3280>) [i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i21, i20]
+69: guard_value(p5, ConstPtr(ptr23), descr=<Guard0x10210e5d0>) [i0, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i21, i20]
debug_merge_point(0, 0, '23 LINE')
+88: p24 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '24 GC_BIF2')
+92: p25 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+96: p26 = getfield_gc_pure(p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+100: p27 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+104: i28 = ptr_eq(p27, p3)
guard_true(i28, descr=<Guard0x10210e560>) [i0, p3, p4, p27, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p26, i21, i20]
+158: setfield_gc(ConstPtr(ptr29), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+171: guard_class(p26, 4297733936, descr=<Guard0x10210e4f0>) [i0, p3, p4, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, None, i21, i20]
+183: i32 = getfield_gc_pure(p26, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+187: i33 = int_add_ovf(i32, i20)
guard_no_overflow(descr=<Guard0x10210e480>) [i0, p3, p4, i33, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, None, i21, i20]
debug_merge_point(0, 0, '25 DEALLOCATE')
+196: p34 = getfield_gc(p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+222: setfield_gc(p24, p34, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+226: guard_nonnull_class(p34, 4297733088, descr=<Guard0x10210e410>) [i0, p34, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i33, None, i21, None]
+245: p36 = getfield_gc(p34, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+249: p37 = getfield_gc_pure(p34, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+253: p38 = getfield_gc_pure(p37, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+257: i39 = getfield_gc_pure(p37, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+261: setfield_gc(p24, p36, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+265: guard_value(i39, 23, descr=<Guard0x10210e3a0>) [i0, i39, p24, p3, p4, p38, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i33, None, i21, None]
+275: guard_value(p38, ConstPtr(ptr41), descr=<Guard0x10210e330>) [i0, p24, p3, p4, p38, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i33, None, i21, None]
debug_merge_point(0, 0, '23 LINE')
debug_merge_point(0, 0, '24 GC_BIF2')
+294: p42 = getfield_gc_pure(p36, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+298: guard_class(p42, 4297733936, descr=<Guard0x10210e2c0>) [i0, p3, p4, p42, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i33, None, i21, None]
+311: i44 = getfield_gc_pure(p42, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+315: i45 = int_add_ovf(i44, i33)
guard_no_overflow(descr=<Guard0x10210e250>) [i0, p3, p4, i45, p42, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i33, None, i21, None]
debug_merge_point(0, 0, '25 DEALLOCATE')
+324: p46 = getfield_gc(p36, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+328: setfield_gc(p24, p46, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+332: guard_nonnull_class(p46, 4297733088, descr=<Guard0x10210e1e0>) [i0, p46, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i45, None, None, i21, None]
+352: p48 = getfield_gc(p46, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+356: p49 = getfield_gc_pure(p46, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+360: p50 = getfield_gc_pure(p49, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+364: i51 = getfield_gc_pure(p49, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+368: setfield_gc(p24, p48, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+372: guard_value(i51, 17, descr=<Guard0x10210e170>) [i0, i51, p24, p3, p4, p50, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i45, None, None, i21, None]
+382: guard_value(p50, ConstPtr(ptr53), descr=<Guard0x10210e100>) [i0, p24, p3, p4, p50, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i45, None, None, i21, None]
debug_merge_point(0, 0, '17 LINE')
debug_merge_point(0, 0, '18 GC_BIF2')
+401: p54 = getfield_gc_pure(p48, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+446: setfield_gc(ConstPtr(ptr55), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+459: guard_class(p54, 4297733936, descr=<Guard0x10210e090>) [i0, p3, p4, p54, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i45, None, None, i21, None]
+473: i57 = getfield_gc_pure(p54, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+477: i59 = int_sub_ovf(i57, 2)
guard_no_overflow(descr=<Guard0x10210e020>) [i0, p3, p4, i59, p54, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i45, None, None, i21, None]
debug_merge_point(0, 0, '19 MOVE')
+487: p60 = getfield_gc(p48, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+491: i62 = int_sub(i0, 1)
+496: i64 = int_le(i62, 0)
guard_false(i64, descr=<Guard0x1016b3f30>) [i62, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i59, p24, p60, i45, None, None, None, None]
debug_merge_point(0, 0, '3 LABEL')
p66 = new_with_vtable(4297733088)
p68 = new_with_vtable(4297733088)
+603: setfield_gc(p68, p60, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p70 = new_with_vtable(4297733936)
+619: setfield_gc(p70, i45, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+623: setfield_gc(p68, p70, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+627: setfield_gc(p66, p68, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p72 = new_with_vtable(4297732952)
+642: setfield_gc(p72, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+650: setfield_gc(p72, ConstPtr(ptr23), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+664: setfield_gc(p66, p72, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+690: setfield_gc(p24, p66, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+694: jump(i62, p4, p3, p24, i59, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p66, p24, descr=TargetToken(4318389136))
+720: --end of the loop--
[25da7f9c5eafd] jit-log-opt-bridge}
[25da7fa109feb] {jit-log-opt-bridge
# bridge out of Guard 0x1016b2fe0 with 76 ops
[i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+59: guard_value(i1, 23, descr=<Guard0x10210e640>) [i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+69: guard_value(p5, ConstPtr(ptr22), descr=<Guard0x10210f910>) [i0, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
debug_merge_point(0, 0, '23 LINE')
+88: p23 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '24 GC_BIF2')
+92: p24 = getfield_gc(p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+96: p25 = getfield_gc_pure(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+100: p26 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+104: i27 = ptr_eq(p26, p3)
guard_true(i27, descr=<Guard0x10210f8a0>) [i0, p3, p4, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p25, i20]
+158: setfield_gc(ConstPtr(ptr28), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+171: guard_class(p25, 4297733936, descr=<Guard0x10210f830>) [i0, p3, p4, p25, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, None, i20]
+184: i31 = getfield_gc_pure(p25, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+188: i32 = int_add_ovf(i31, i20)
guard_no_overflow(descr=<Guard0x10210f7c0>) [i0, p3, p4, i32, p25, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, None, i20]
debug_merge_point(0, 0, '25 DEALLOCATE')
+197: p33 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+223: setfield_gc(p23, p33, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+227: guard_nonnull_class(p33, 4297733088, descr=<Guard0x10210f750>) [i0, p33, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
+246: p35 = getfield_gc(p33, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+250: p36 = getfield_gc_pure(p33, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+254: p37 = getfield_gc_pure(p36, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+258: i38 = getfield_gc_pure(p36, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+262: setfield_gc(p23, p35, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+266: guard_value(i38, 23, descr=<Guard0x10210f6e0>) [i0, i38, p23, p3, p4, p37, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
+276: guard_value(p37, ConstPtr(ptr40), descr=<Guard0x10210f670>) [i0, p23, p3, p4, p37, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
debug_merge_point(0, 0, '23 LINE')
debug_merge_point(0, 0, '24 GC_BIF2')
+295: p41 = getfield_gc_pure(p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+299: guard_class(p41, 4297733936, descr=<Guard0x10210f600>) [i0, p3, p4, p41, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
+312: i43 = getfield_gc_pure(p41, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+316: i44 = int_add_ovf(i43, i32)
guard_no_overflow(descr=<Guard0x10210f590>) [i0, p3, p4, i44, p41, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i32, None, None]
debug_merge_point(0, 0, '25 DEALLOCATE')
+325: p45 = getfield_gc(p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+329: setfield_gc(p23, p45, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+333: guard_nonnull_class(p45, 4297733088, descr=<Guard0x10210f520>) [i0, p45, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i44, None, None, None]
+352: p47 = getfield_gc(p45, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+356: p48 = getfield_gc_pure(p45, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+360: p49 = getfield_gc_pure(p48, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+364: i50 = getfield_gc_pure(p48, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+368: setfield_gc(p23, p47, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+372: guard_value(i50, 17, descr=<Guard0x10210f4b0>) [i0, i50, p23, p3, p4, p49, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i44, None, None, None]
+382: guard_value(p49, ConstPtr(ptr52), descr=<Guard0x10210f440>) [i0, p23, p3, p4, p49, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i44, None, None, None]
debug_merge_point(0, 0, '17 LINE')
debug_merge_point(0, 0, '18 GC_BIF2')
+401: p53 = getfield_gc_pure(p47, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+446: setfield_gc(ConstPtr(ptr54), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+459: guard_class(p53, 4297733936, descr=<Guard0x10210f3d0>) [i0, p3, p4, p53, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i44, None, None, None]
+472: i56 = getfield_gc_pure(p53, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+476: i58 = int_sub_ovf(i56, 2)
guard_no_overflow(descr=<Guard0x10210f360>) [i0, p3, p4, i58, p53, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i44, None, None, None]
debug_merge_point(0, 0, '19 MOVE')
+486: p59 = getfield_gc(p47, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+490: i61 = int_sub(i0, 1)
+495: i63 = int_le(i61, 0)
guard_false(i63, descr=<Guard0x10210f2f0>) [i61, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p59, i58, p23, i44, None, None, None]
debug_merge_point(0, 0, '3 LABEL')
p65 = new_with_vtable(4297733088)
p67 = new_with_vtable(4297733088)
+602: setfield_gc(p67, p59, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p69 = new_with_vtable(4297733936)
+617: setfield_gc(p69, i44, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+621: setfield_gc(p67, p69, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+625: setfield_gc(p65, p67, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p71 = new_with_vtable(4297732952)
+640: setfield_gc(p71, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+648: setfield_gc(p71, ConstPtr(ptr22), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+662: setfield_gc(p65, p71, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+688: setfield_gc(p23, p65, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+692: jump(i61, p4, p3, p23, i58, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p65, p23, descr=TargetToken(4318389136))
+729: --end of the loop--
[25da7fa17ed91] jit-log-opt-bridge}
[25da7fa311659] {jit-log-opt-bridge
# bridge out of Guard 0x10210e3a0 with 37 ops
[i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+59: guard_value(i1, 17, descr=<Guard0x10210f980>) [i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+69: guard_value(p5, ConstPtr(ptr23), descr=<Guard0x10210fec0>) [i0, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
debug_merge_point(0, 0, '17 LINE')
+88: p24 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '18 GC_BIF2')
+92: p25 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+96: p26 = getfield_gc_pure(p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+141: setfield_gc(ConstPtr(ptr27), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+154: guard_class(p26, 4297733936, descr=<Guard0x10210fe50>) [i0, p3, p4, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+167: i29 = getfield_gc_pure(p26, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+171: i31 = int_sub_ovf(i29, 2)
guard_no_overflow(descr=<Guard0x10210fde0>) [i0, p3, p4, i31, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+181: p32 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+185: i33 = ptr_eq(p32, p3)
guard_true(i33, descr=<Guard0x10210fd70>) [i0, p3, p4, p32, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i31, i20, i21]
debug_merge_point(0, 0, '19 MOVE')
+198: p34 = getfield_gc(p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+202: i36 = int_sub(i0, 1)
+207: i38 = int_le(i36, 0)
guard_false(i38, descr=<Guard0x10210fd00>) [i36, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p24, p34, i31, i20, None]
debug_merge_point(0, 0, '3 LABEL')
p41 = new_with_vtable(4297733088)
p43 = new_with_vtable(4297733088)
+307: setfield_gc(p43, p34, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p45 = new_with_vtable(4297733936)
+322: setfield_gc(p45, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+326: setfield_gc(p43, p45, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+330: setfield_gc(p41, p43, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p47 = new_with_vtable(4297732952)
+345: setfield_gc(p47, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+353: setfield_gc(p47, ConstPtr(ptr23), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+367: setfield_gc(p41, p47, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+393: setfield_gc(p24, p41, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+397: jump(i36, p4, p3, p24, i31, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p41, p24, descr=TargetToken(4318389136))
+430: --end of the loop--
[25da7fa33ef34] jit-log-opt-bridge}
[25da7fa5c179e] {jit-log-opt-loop
# Loop 2 (23 LINE) : loop with 73 ops
[i0, i1, i2, p3, p4, p5]
+129: p6 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.register.X_Register.inst_regs 16>)
+140: p8 = getarrayitem_gc(p6, 0, descr=<ArrayP 8>)
+144: p10 = getarrayitem_gc(p6, 1, descr=<ArrayP 8>)
+148: p12 = getarrayitem_gc(p6, 2, descr=<ArrayP 8>)
+152: p14 = getarrayitem_gc(p6, 3, descr=<ArrayP 8>)
+156: p16 = getarrayitem_gc(p6, 4, descr=<ArrayP 8>)
+160: p18 = getarrayitem_gc(p6, 5, descr=<ArrayP 8>)
+164: p20 = getarrayitem_gc(p6, 6, descr=<ArrayP 8>)
+168: p22 = getarrayitem_gc(p6, 7, descr=<ArrayP 8>)
+172: p24 = getarrayitem_gc(p6, 8, descr=<ArrayP 8>)
+176: p26 = getarrayitem_gc(p6, 9, descr=<ArrayP 8>)
+180: p28 = getarrayitem_gc(p6, 10, descr=<ArrayP 8>)
+184: p30 = getarrayitem_gc(p6, 11, descr=<ArrayP 8>)
+195: p32 = getarrayitem_gc(p6, 12, descr=<ArrayP 8>)
+206: p34 = getarrayitem_gc(p6, 13, descr=<ArrayP 8>)
+217: p36 = getarrayitem_gc(p6, 14, descr=<ArrayP 8>)
+231: p38 = getarrayitem_gc(p6, 15, descr=<ArrayP 8>)
+245: label(i0, i1, i2, p3, p4, p5, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, descr=TargetToken(4329678352))
debug_merge_point(0, 0, '23 LINE')
+328: p39 = getfield_gc(p3, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '24 GC_BIF2')
+339: p40 = getfield_gc(p39, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+343: p41 = getfield_gc_pure(p40, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+347: p42 = getfield_gc(p3, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+351: i43 = ptr_eq(p42, p4)
guard_true(i43, descr=<Guard0x10210ff30>) [i2, i1, i0, p4, p3, p42, p8, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p41]
+401: setfield_gc(ConstPtr(ptr44), p3, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+414: guard_class(p41, 4297733936, descr=<Guard0x1021309c0>) [i2, i1, i0, p4, p3, p8, p41, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, None]
+427: guard_nonnull_class(p8, 4297733936, descr=<Guard0x102130950>) [i2, i1, i0, p4, p3, p8, p41, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, None]
+445: i48 = getfield_gc_pure(p41, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+449: i49 = getfield_gc_pure(p8, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+453: i50 = int_add_ovf(i48, i49)
guard_no_overflow(descr=<Guard0x1021308e0>) [i2, i1, i0, p4, p3, i50, p8, p41, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, None]
debug_merge_point(0, 0, '25 DEALLOCATE')
+462: p51 = getfield_gc(p40, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+488: setfield_gc(p39, p51, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+492: guard_nonnull_class(p51, 4297733088, descr=<Guard0x102130870>) [i0, i2, i1, p51, p4, p3, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i50, None]
+512: p53 = getfield_gc(p51, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+516: p54 = getfield_gc_pure(p51, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+520: p55 = getfield_gc_pure(p54, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+524: i56 = getfield_gc_pure(p54, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+528: setfield_gc(p39, p53, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+532: i58 = int_eq(27, i0)
guard_true(i58, descr=<Guard0x102130800>) [i0, i2, i1, i56, p4, p3, p55, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i50, None]
+546: guard_value(i56, 23, descr=<Guard0x102130790>) [i2, i1, i56, p39, p4, p3, p55, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i50, None]
+556: guard_value(p55, ConstPtr(ptr60), descr=<Guard0x102130720>) [i2, i1, p39, p4, p3, p55, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i50, None]
debug_merge_point(0, 0, '23 LINE')
+575: p61 = same_as(p3)
+575: p62 = same_as(p39)
+578: label(i1, i2, p3, p4, p39, i50, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p53, p62, descr=TargetToken(4329678432))
debug_merge_point(0, 0, '23 LINE')
debug_merge_point(0, 0, '24 GC_BIF2')
+605: p63 = getfield_gc_pure(p53, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+650: setfield_gc(ConstPtr(ptr44), p3, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+663: guard_class(p63, 4297733936, descr=<Guard0x1021306b0>) [i2, i1, p4, p3, p63, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i50]
+676: i64 = getfield_gc_pure(p63, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+680: i65 = int_add_ovf(i64, i50)
guard_no_overflow(descr=<Guard0x102130640>) [i2, i1, p4, p3, i65, p63, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i50]
debug_merge_point(0, 0, '25 DEALLOCATE')
+689: p66 = getfield_gc(p53, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+715: setfield_gc(p62, p66, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+719: guard_nonnull_class(p66, 4297733088, descr=<Guard0x1021305d0>) [i2, i1, p66, p4, p3, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i65, None]
+738: p67 = getfield_gc(p66, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+742: p68 = getfield_gc_pure(p66, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+746: p69 = getfield_gc_pure(p68, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+750: i70 = getfield_gc_pure(p68, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+754: setfield_gc(p62, p67, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+758: guard_value(i70, 23, descr=<Guard0x102130560>) [i2, i1, i70, p62, p4, p3, p69, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i65, None]
+768: guard_value(p69, ConstPtr(ptr60), descr=<Guard0x1021304f0>) [i2, i1, p62, p4, p3, p69, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, i65, None]
debug_merge_point(0, 0, '23 LINE')
+787: jump(i1, i2, p3, p4, p62, i65, p10, p12, p14, p16, p18, p20, p22, p24, p26, p28, p30, p32, p34, p36, p38, p67, p62, descr=TargetToken(4329678432))
+802: --end of the loop--
[25da7fa63095e] jit-log-opt-loop}
[25da7fa9bb805] {jit-log-opt-bridge
# bridge out of Guard 0x10210f6e0 with 37 ops
[i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+59: guard_value(i1, 17, descr=<Guard0x102130a30>) [i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+69: guard_value(p5, ConstPtr(ptr22), descr=<Guard0x102130f70>) [i0, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
debug_merge_point(0, 0, '17 LINE')
+88: p23 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '18 GC_BIF2')
+92: p24 = getfield_gc(p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+96: p25 = getfield_gc_pure(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+141: setfield_gc(ConstPtr(ptr26), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+154: guard_class(p25, 4297733936, descr=<Guard0x102130f00>) [i0, p3, p4, p25, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+168: i28 = getfield_gc_pure(p25, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+172: i30 = int_sub_ovf(i28, 2)
guard_no_overflow(descr=<Guard0x102130e90>) [i0, p3, p4, i30, p25, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+182: p31 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+186: i32 = ptr_eq(p31, p3)
guard_true(i32, descr=<Guard0x102130e20>) [i0, p3, p4, p31, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i30, i20]
debug_merge_point(0, 0, '19 MOVE')
+199: p33 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+203: i35 = int_sub(i0, 1)
+208: i37 = int_le(i35, 0)
guard_false(i37, descr=<Guard0x102130db0>) [i35, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p23, p33, i30, i20]
debug_merge_point(0, 0, '3 LABEL')
p39 = new_with_vtable(4297733088)
p41 = new_with_vtable(4297733088)
+308: setfield_gc(p41, p33, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p43 = new_with_vtable(4297733936)
+324: setfield_gc(p43, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+328: setfield_gc(p41, p43, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+332: setfield_gc(p39, p41, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p45 = new_with_vtable(4297732952)
+347: setfield_gc(p45, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+355: setfield_gc(p45, ConstPtr(ptr22), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+369: setfield_gc(p39, p45, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+395: setfield_gc(p23, p39, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+399: jump(i35, p4, p3, p23, i30, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p39, p23, descr=TargetToken(4318389136))
+432: --end of the loop--
[25da7fa9f5f5a] jit-log-opt-bridge}
[25da7fb0a974f] {jit-log-opt-bridge
# bridge out of Guard 0x10210f4b0 with 8 ops
[i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+59: guard_value(i1, 23, descr=<Guard0x102130fe0>) [i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
+69: guard_value(p5, ConstPtr(ptr22), descr=<Guard0x102131670>) [i0, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20]
debug_merge_point(0, 0, '23 LINE')
+88: label(i0, p4, p3, p2, i20, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, descr=TargetToken(4329679712))
p24 = new_with_vtable(4297733936)
p26 = new_with_vtable(4297733936)
+212: setfield_gc(p24, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+216: jump(27, i0, 0, p4, p3, p2, p24, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, descr=TargetToken(4329678352))
+432: --end of the loop--
[25da7fb0bd37f] jit-log-opt-bridge}
[25da7fb517ed9] {jit-log-opt-bridge
# bridge out of Guard 0x102130790 with 38 ops
[i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+59: guard_value(i2, 17, descr=<Guard0x1021316e0>) [i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+69: guard_value(p6, ConstPtr(ptr24), descr=<Guard0x102131d00>) [i0, i1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
debug_merge_point(0, 0, '17 LINE')
+88: p25 = getfield_gc(p5, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '18 GC_BIF2')
+92: p26 = getfield_gc(p25, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+96: p27 = getfield_gc_pure(p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+141: setfield_gc(ConstPtr(ptr28), p5, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+154: guard_class(p27, 4297733936, descr=<Guard0x102131c90>) [i0, i1, p4, p5, p27, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+166: i30 = getfield_gc_pure(p27, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+170: i32 = int_sub_ovf(i30, 2)
guard_no_overflow(descr=<Guard0x102131c20>) [i0, i1, p4, p5, i32, p27, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+180: p33 = getfield_gc(p5, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+184: i34 = ptr_eq(p33, p4)
guard_true(i34, descr=<Guard0x102131bb0>) [i0, i1, p4, p5, p33, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i32, i22]
debug_merge_point(0, 0, '19 MOVE')
+193: p35 = getfield_gc(p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+197: i37 = int_sub(i1, 1)
+208: guard_false(i0, descr=<Guard0x102131b40>) [i37, p4, p5, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p25, p35, i32, i22]
+224: i39 = int_le(i37, 0)
guard_false(i39, descr=<Guard0x102131ad0>) [i37, p4, p5, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p25, p35, i32, i22]
debug_merge_point(0, 0, '3 LABEL')
p41 = new_with_vtable(4297733088)
p43 = new_with_vtable(4297733088)
+324: setfield_gc(p43, p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p45 = new_with_vtable(4297733936)
+339: setfield_gc(p45, i22, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+343: setfield_gc(p43, p45, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+347: setfield_gc(p41, p43, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p47 = new_with_vtable(4297732952)
+362: setfield_gc(p47, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+370: setfield_gc(p47, ConstPtr(ptr24), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+384: setfield_gc(p41, p47, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+410: setfield_gc(p25, p41, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+414: jump(i37, p5, p4, p25, i32, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p41, p25, descr=TargetToken(4318389136))
+601: --end of the loop--
[25da7fb55ac1b] jit-log-opt-bridge}
[25da7fb8a8bae] {jit-log-opt-bridge
# bridge out of Guard 0x10210e170 with 30 ops
[i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+59: guard_value(i1, 23, descr=<Guard0x102131d70>) [i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+69: guard_value(p5, ConstPtr(ptr23), descr=<Guard0x10215e720>) [i0, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
debug_merge_point(0, 0, '23 LINE')
+88: label(i0, p4, p3, p2, i20, i21, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, descr=TargetToken(4329681232))
+115: p24 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '24 GC_BIF2')
+119: p25 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+123: p26 = getfield_gc_pure(p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+128: p27 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+132: i28 = ptr_eq(p27, p3)
guard_true(i28, descr=<Guard0x10215e6b0>) [i0, p3, p4, p27, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p26, i20, i21]
+186: setfield_gc(ConstPtr(ptr29), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+199: guard_class(p26, 4297733936, descr=<Guard0x10215e640>) [i0, p3, p4, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, None, i20, i21]
+213: i32 = getfield_gc_pure(p26, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+217: i33 = int_add_ovf(i32, i20)
guard_no_overflow(descr=<Guard0x10215e5d0>) [i0, p3, p4, i33, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, None, i20, i21]
debug_merge_point(0, 0, '25 DEALLOCATE')
+226: p34 = getfield_gc(p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+253: setfield_gc(p24, p34, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+257: guard_nonnull_class(p34, 4297733088, descr=<Guard0x10215e560>) [i0, p34, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i33, None, None, i21]
+276: p36 = getfield_gc(p34, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+280: p37 = getfield_gc_pure(p34, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+284: p38 = getfield_gc_pure(p37, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+288: i39 = getfield_gc_pure(p37, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+292: setfield_gc(p24, p36, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+296: guard_value(i39, 23, descr=<Guard0x10215e4f0>) [i0, i39, p24, p3, p4, p38, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i33, None, None, i21]
+306: guard_value(p38, ConstPtr(ptr41), descr=<Guard0x10215e480>) [i0, p24, p3, p4, p38, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i33, None, None, i21]
debug_merge_point(0, 0, '23 LINE')
+325: jump(i0, p4, p3, p24, i33, i21, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, descr=TargetToken(4329681232))
+340: --end of the loop--
[25da7fb8e50cf] jit-log-opt-bridge}
[25da7fbc22d57] {jit-log-opt-bridge
# bridge out of Guard 0x102130560 with 38 ops
[i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+59: guard_value(i2, 17, descr=<Guard0x10215e790>) [i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+69: guard_value(p6, ConstPtr(ptr24), descr=<Guard0x10215edb0>) [i0, i1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
debug_merge_point(0, 0, '17 LINE')
+88: p25 = getfield_gc(p5, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '18 GC_BIF2')
+92: p26 = getfield_gc(p25, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+96: p27 = getfield_gc_pure(p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+141: setfield_gc(ConstPtr(ptr28), p5, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+154: guard_class(p27, 4297733936, descr=<Guard0x10215ed40>) [i0, i1, p4, p5, p27, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+166: i30 = getfield_gc_pure(p27, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+170: i32 = int_sub_ovf(i30, 2)
guard_no_overflow(descr=<Guard0x10215ecd0>) [i0, i1, p4, p5, i32, p27, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+180: p33 = getfield_gc(p5, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+184: i34 = ptr_eq(p33, p4)
guard_true(i34, descr=<Guard0x10215ec60>) [i0, i1, p4, p5, p33, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i32, i22]
debug_merge_point(0, 0, '19 MOVE')
+197: p35 = getfield_gc(p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+201: i37 = int_sub(i1, 1)
+212: guard_false(i0, descr=<Guard0x10215ebf0>) [i37, p4, p5, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p25, p35, i32, i22]
+228: i39 = int_le(i37, 0)
guard_false(i39, descr=<Guard0x10215eb80>) [i37, p4, p5, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p25, p35, i32, i22]
debug_merge_point(0, 0, '3 LABEL')
p41 = new_with_vtable(4297733088)
p43 = new_with_vtable(4297733088)
+328: setfield_gc(p43, p35, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p45 = new_with_vtable(4297733936)
+343: setfield_gc(p45, i22, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+347: setfield_gc(p43, p45, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+351: setfield_gc(p41, p43, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p47 = new_with_vtable(4297732952)
+366: setfield_gc(p47, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+374: setfield_gc(p47, ConstPtr(ptr24), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+388: setfield_gc(p41, p47, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+414: setfield_gc(p25, p41, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+418: jump(i37, p5, p4, p25, i32, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p41, p25, descr=TargetToken(4318389136))
+615: --end of the loop--
[25da7fbc60304] jit-log-opt-bridge}
[25da7fbebf831] {jit-log-opt-bridge
# bridge out of Guard 0x10215e4f0 with 37 ops
[i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+59: guard_value(i1, 17, descr=<Guard0x10215ee20>) [i0, i1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+69: guard_value(p5, ConstPtr(ptr23), descr=<Guard0x10215f360>) [i0, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
debug_merge_point(0, 0, '17 LINE')
+88: p24 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '18 GC_BIF2')
+92: p25 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+96: p26 = getfield_gc_pure(p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+141: setfield_gc(ConstPtr(ptr27), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+154: guard_class(p26, 4297733936, descr=<Guard0x10215f2f0>) [i0, p3, p4, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+167: i29 = getfield_gc_pure(p26, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+171: i31 = int_sub_ovf(i29, 2)
guard_no_overflow(descr=<Guard0x10215f280>) [i0, p3, p4, i31, p26, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, i21]
+181: p32 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+185: i33 = ptr_eq(p32, p3)
guard_true(i33, descr=<Guard0x10215f210>) [i0, p3, p4, p32, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i31, i20, i21]
debug_merge_point(0, 0, '19 MOVE')
+198: p34 = getfield_gc(p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+202: i36 = int_sub(i0, 1)
+213: i38 = int_le(i36, 0)
guard_false(i38, descr=<Guard0x10215f1a0>) [i36, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p24, p34, i31, i20, None]
debug_merge_point(0, 0, '3 LABEL')
p41 = new_with_vtable(4297733088)
p43 = new_with_vtable(4297733088)
+320: setfield_gc(p43, p34, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p45 = new_with_vtable(4297733936)
+335: setfield_gc(p45, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+346: setfield_gc(p43, p45, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+350: setfield_gc(p41, p43, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p47 = new_with_vtable(4297732952)
+365: setfield_gc(p47, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+373: setfield_gc(p47, ConstPtr(ptr23), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+387: setfield_gc(p41, p47, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+413: setfield_gc(p24, p41, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+417: jump(i36, p4, p3, p24, i31, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p41, p24, descr=TargetToken(4318389136))
+450: --end of the loop--
[25da7fbeeca32] jit-log-opt-bridge}
[25da7fd9027e6] {jit-log-opt-bridge
# bridge out of Guard 0x101658bf0 with 47 ops
[i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, i20, p21, p22]
+59: p23 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
p25 = new_with_vtable(4297733088)
+142: setfield_gc(p25, p21, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+146: setfield_gc(p25, p19, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+172: setfield_gc(p22, p25, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+176: p26 = getfield_gc(p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+180: i28 = int_sub(i2, 1)
+191: guard_false(i1, descr=<Guard0x10215f3d0>) [i0, i28, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p23, p26, i20]
+207: i30 = int_le(i28, 0)
guard_false(i30, descr=<Guard0x10215fad0>) [i0, i28, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p23, p26, i20]
debug_merge_point(0, 0, '3 LABEL')
p32 = new_with_vtable(4297733088)
+228: setfield_gc(p32, p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p34 = new_with_vtable(4297732952)
+243: setfield_gc(p34, 17, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+251: setfield_gc(p34, ConstPtr(ptr36), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+265: setfield_gc(p32, p34, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+291: setfield_gc(p23, p32, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+295: p37 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+299: i38 = ptr_eq(p37, p3)
guard_true(i38, descr=<Guard0x10215fa60>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+308: p39 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_scheduler 48>)
+312: guard_nonnull(p39, descr=<Guard0x10215f9f0>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+321: p40 = getfield_gc_pure(p39, descr=<FieldP pyrlang.interpreter.scheduler.Scheduler.inst_const0 8>)
+325: p41 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_frame_cache 16>)
+329: guard_nonnull(p41, descr=<Guard0x10215f980>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+338: p42 = getfield_gc_pure(p41, descr=<FieldP pyrlang.interpreter.frame_cache.FrameCache.inst_cache 8>)
+342: guard_nonnull(p42, descr=<Guard0x10215f910>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+351: i43 = arraylen_gc(p42, descr=<ArrayP 8>)
+355: i45 = int_ge(i43, 1)
guard_true(i45, descr=<Guard0x10215f8a0>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+365: p47 = getarrayitem_gc_pure(p42, 0, descr=<ArrayP 8>)
+369: guard_nonnull(p47, descr=<Guard0x10215f830>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+378: i48 = getfield_gc_pure(p47, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+382: guard_value(i48, 17, descr=<Guard0x10215f7c0>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+392: p50 = getfield_gc_pure(p47, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+396: guard_nonnull(p50, descr=<Guard0x10215f750>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+405: i51 = instance_ptr_eq(p50, ConstPtr(ptr36))
guard_true(i51, descr=<Guard0x10215f6e0>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+424: p52 = getfield_gc_pure(p50, descr=<FieldP pyrlang.rpybeam.beam_code.CodeParser.inst_labelTable 96>)
+428: guard_nonnull(p52, descr=<Guard0x10215f670>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+437: i53 = arraylen_gc(p52, descr=<ArrayS 8>)
+442: i55 = int_ge(i53, 2)
guard_true(i55, descr=<Guard0x10215f600>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+452: i57 = getarrayitem_gc_pure(p52, 1, descr=<ArrayS 8>)
+457: guard_value(i57, 3, descr=<Guard0x10215f590>) [i28, p23, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i20]
+467: jump(i28, p4, p3, p23, i20, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p40, p23, p32, p47, p52, descr=TargetToken(4318388416))
+520: --end of the loop--
[25da7fd9586ac] jit-log-opt-bridge}
[25da7fed782e2] {jit-log-opt-bridge
# bridge out of Guard 0x101658cd0 with 75 ops
[i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+59: p21 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '6 LABEL')
debug_merge_point(0, 0, '7 MOVE')
+63: p22 = getfield_gc(p4, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+67: i23 = ptr_eq(p22, p3)
guard_true(i23, descr=<Guard0x10215fb40>) [i0, i1, i2, p22, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
debug_merge_point(0, 0, '8 RETURN')
+76: p24 = getfield_gc(p21, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+80: guard_nonnull_class(p24, 4297733088, descr=<Guard0x102188fe0>) [i2, i0, i1, p24, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+98: p26 = getfield_gc(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+102: p27 = getfield_gc_pure(p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+106: p28 = getfield_gc_pure(p27, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+110: i29 = getfield_gc_pure(p27, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+136: setfield_gc(p21, p26, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+140: i31 = int_eq(9, i2)
guard_false(i31, descr=<Guard0x102188f70>) [i2, i0, i1, i29, p3, p4, p28, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+154: guard_value(i29, 23, descr=<Guard0x102188f00>) [i0, i1, i29, p21, p3, p4, p28, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+164: guard_value(p28, ConstPtr(ptr33), descr=<Guard0x102188e90>) [i0, i1, p21, p3, p4, p28, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
debug_merge_point(0, 0, '23 LINE')
+183: p34 = same_as(p21)
+186: label(i1, i0, p4, p3, p21, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p26, p34, descr=TargetToken(4329683632))
debug_merge_point(0, 0, '24 GC_BIF2')
+213: p35 = getfield_gc_pure(p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+258: setfield_gc(ConstPtr(ptr36), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+271: guard_class(p35, 4297733936, descr=<Guard0x102188e20>) [i0, i1, p3, p4, p35, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
+284: i38 = getfield_gc_pure(p35, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+288: i40 = int_add_ovf(i38, 1)
guard_no_overflow(descr=<Guard0x102188db0>) [i0, i1, p3, p4, i40, p35, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]
debug_merge_point(0, 0, '25 DEALLOCATE')
+298: p41 = getfield_gc(p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '26 RETURN')
+322: setfield_gc(p34, p41, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+326: guard_nonnull_class(p41, 4297733088, descr=<Guard0x102188d40>) [i0, i1, p41, p3, p4, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, i40]
+345: p43 = getfield_gc(p41, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+349: p44 = getfield_gc_pure(p41, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+353: p45 = getfield_gc_pure(p44, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+358: i46 = getfield_gc_pure(p44, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+363: setfield_gc(p34, p43, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+367: guard_value(i46, 17, descr=<Guard0x102188cd0>) [i0, i1, i46, p34, p3, p4, p45, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, i40]
+377: guard_value(p45, ConstPtr(ptr48), descr=<Guard0x102188c60>) [i0, i1, p34, p3, p4, p45, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, i40]
debug_merge_point(0, 0, '17 LINE')
debug_merge_point(0, 0, '18 GC_BIF2')
+396: p49 = getfield_gc_pure(p43, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+441: setfield_gc(ConstPtr(ptr50), p4, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+454: guard_class(p49, 4297733936, descr=<Guard0x102188bf0>) [i0, i1, p3, p4, p49, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, i40]
+467: i52 = getfield_gc_pure(p49, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+471: i54 = int_sub_ovf(i52, 2)
guard_no_overflow(descr=<Guard0x102188b80>) [i0, i1, p3, p4, i54, p49, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, i40]
debug_merge_point(0, 0, '19 MOVE')
+481: p55 = getfield_gc(p43, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
debug_merge_point(0, 0, '20 MOVE')
debug_merge_point(0, 0, '21 LINE')
debug_merge_point(0, 0, '22 CALL')
+485: i57 = int_sub(i1, 1)
+496: guard_false(i0, descr=<Guard0x102188b10>) [i57, p3, p4, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p55, p34, i54, i40]
+512: i59 = int_le(i57, 0)
guard_false(i59, descr=<Guard0x102188aa0>) [i57, p3, p4, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p55, p34, i54, i40]
debug_merge_point(0, 0, '3 LABEL')
debug_merge_point(0, 0, '4 IS_INTEGER')
debug_merge_point(0, 0, '5 SELECT_VAL')
+522: i61 = int_eq(i54, 1)
guard_true(i61, descr=<Guard0x102188a30>) [i57, p3, p4, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p55, p34, i54, i40]
debug_merge_point(0, 0, '6 LABEL')
debug_merge_point(0, 0, '7 MOVE')
debug_merge_point(0, 0, '8 RETURN')
debug_merge_point(0, 0, '23 LINE')
p63 = new_with_vtable(4297733088)
+611: setfield_gc(p63, p55, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p65 = new_with_vtable(4297733936)
+626: setfield_gc(p65, i40, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+630: setfield_gc(p63, p65, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+654: setfield_gc(p34, p63, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
p67 = new_with_vtable(4297733936)
+669: setfield_gc(p67, 1, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+677: jump(i57, 0, p4, p3, p34, p67, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p63, p34, descr=TargetToken(4329683632))
+717: --end of the loop--
[25da7fedd9140] jit-log-opt-bridge}
[25da7feeeb846] {jit-log-opt-bridge
# bridge out of Guard 0x10168a170 with 14 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i19]
+59: p20 = force_token()
p22 = new_with_vtable(4297733088)
p24 = new_with_vtable(4297733088)
+159: setfield_gc(p24, p17, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+163: setfield_gc(p24, ConstPtr(ptr25), descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+177: setfield_gc(p22, p24, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p27 = new_with_vtable(4297732952)
+193: setfield_gc(p27, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+201: setfield_gc(p27, ConstPtr(ptr29), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+215: setfield_gc(p22, p27, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+241: setfield_gc(p18, p22, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+272: setfield_gc(p1, p20, descr=<FieldP pyrlang.interpreter.register.X_Register.vable_token 8>)
+276: guard_not_forced_2(descr=<Guard0x102189050>) [p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p1, i19]
+290: finish(ConstPtr(ptr30), descr=<DoneWithThisFrameDescrRef object at 0x1002d0a40>)
+396: --end of the loop--
[25da7fef0a007] jit-log-opt-bridge}
[25da80127194b] {jit-log-opt-bridge
# bridge out of Guard 0x101658720 with 13 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17, p18, p19, p20, i21]
+59: p22 = force_token()
p24 = new_with_vtable(4297733088)
p26 = new_with_vtable(4297733088)
+166: setfield_gc(p26, p20, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p28 = new_with_vtable(4297733936)
+188: setfield_gc(p28, i21, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+192: setfield_gc(p26, p28, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+196: setfield_gc(p24, p26, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
+200: setfield_gc(p24, p18, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+231: setfield_gc(p19, p24, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+262: setfield_gc(p1, p22, descr=<FieldP pyrlang.interpreter.register.X_Register.vable_token 8>)
+266: guard_not_forced_2(descr=<Guard0x102189130>) [p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p1, i17]
+287: finish(ConstPtr(ptr29), descr=<DoneWithThisFrameDescrRef object at 0x1002d0a40>)
+393: --end of the loop--
[25da8012857c8] jit-log-opt-bridge}
[25da803959e6d] {jit-log-opt-bridge
# bridge out of Guard 0x102188cd0 with 12 ops
[i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+59: guard_value(i2, 23, descr=<Guard0x102189210>) [i0, i1, i2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+69: guard_value(p6, ConstPtr(ptr24), descr=<Guard0x102189590>) [i0, i1, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
debug_merge_point(0, 0, '23 LINE')
+88: guard_nonnull(p5, descr=<Guard0x102189520>) [i0, i1, p3, p4, p5, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+97: guard_nonnull(p3, descr=<Guard0x1021894b0>) [i0, i1, p3, p4, p5, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+106: p25 = getfield_gc(p5, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
+110: guard_nonnull(p25, descr=<Guard0x102189440>) [i0, i1, p3, p4, p5, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+119: p26 = getfield_gc(p25, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+123: p27 = getfield_gc(p5, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+127: i28 = ptr_eq(p27, p4)
guard_true(i28, descr=<Guard0x1021893d0>) [i0, i1, p3, p4, p5, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, i22]
+140: jump(i1, i0, p5, p4, p3, i22, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p26, p25, descr=TargetToken(4329678432))
+319: --end of the loop--
[25da80397423b] jit-log-opt-bridge}
[25da803b0905c] {jit-log-opt-bridge
# bridge out of Guard 0x10168b3d0 with 16 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17, p18, p19, i20]
+59: p21 = force_token()
p23 = new_with_vtable(4297733088)
p25 = new_with_vtable(4297733088)
+159: setfield_gc(p25, p19, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p27 = new_with_vtable(4297733936)
+174: setfield_gc(p27, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+178: setfield_gc(p25, p27, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+182: setfield_gc(p23, p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p29 = new_with_vtable(4297732952)
+197: setfield_gc(p29, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+205: setfield_gc(p29, ConstPtr(ptr31), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+219: setfield_gc(p23, p29, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+245: setfield_gc(p18, p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+276: setfield_gc(p1, p21, descr=<FieldP pyrlang.interpreter.register.X_Register.vable_token 8>)
+280: guard_not_forced_2(descr=<Guard0x102189600>) [p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p1, i17]
+294: finish(ConstPtr(ptr32), descr=<DoneWithThisFrameDescrRef object at 0x1002d0a40>)
+400: --end of the loop--
[25da803b300b7] jit-log-opt-bridge}
[25da803c41322] {jit-log-opt-bridge
# bridge out of Guard 0x1016b2560 with 16 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17, p18, p19, i20]
+59: p21 = force_token()
p23 = new_with_vtable(4297733088)
p25 = new_with_vtable(4297733088)
+152: setfield_gc(p25, p18, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p27 = new_with_vtable(4297733936)
+167: setfield_gc(p27, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+178: setfield_gc(p25, p27, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+182: setfield_gc(p23, p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p29 = new_with_vtable(4297732952)
+197: setfield_gc(p29, 17, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+205: setfield_gc(p29, ConstPtr(ptr31), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+219: setfield_gc(p23, p29, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+245: setfield_gc(p19, p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+276: setfield_gc(p1, p21, descr=<FieldP pyrlang.interpreter.register.X_Register.vable_token 8>)
+280: guard_not_forced_2(descr=<Guard0x1021896e0>) [p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p1, i17]
+301: finish(ConstPtr(ptr32), descr=<DoneWithThisFrameDescrRef object at 0x1002d0a40>)
+407: --end of the loop--
[25da803c56aca] jit-log-opt-bridge}
[25da807685589] {jit-log-opt-bridge
# bridge out of Guard 0x102188a30 with 71 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i19, i20]
+59: i22 = int_eq(i19, 0)
guard_false(i22, descr=<Guard0x1021897c0>) [i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i20, p17, i19, p18]
+69: p23 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_y_reg 88>)
debug_merge_point(0, 0, '9 LABEL')
debug_merge_point(0, 0, '10 ALLOCATE_ZERO')
+73: p24 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_scheduler 48>)
+77: p25 = getfield_gc_pure(p24, descr=<FieldP pyrlang.interpreter.scheduler.Scheduler.inst_const0 8>)
p27 = new_with_vtable(4297733088)
p29 = new_with_vtable(4297733088)
+174: setfield_gc(p29, p17, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p31 = new_with_vtable(4297733936)
+189: setfield_gc(p31, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+193: setfield_gc(p29, p31, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+197: setfield_gc(p27, p29, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p33 = new_with_vtable(4297732952)
+212: setfield_gc(p33, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+220: setfield_gc(p33, ConstPtr(ptr35), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+234: setfield_gc(p27, p33, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+258: setfield_gc(p18, p27, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+262: p36 = getfield_gc(p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
debug_merge_point(0, 0, '11 LINE')
debug_merge_point(0, 0, '12 GC_BIF2')
+267: p37 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_x_reg 80>)
+271: i38 = ptr_eq(p37, p1)
guard_true(i38, descr=<Guard0x1021c4020>) [i0, p1, p2, p37, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p36, i19, p25, p23]
+325: setfield_gc(ConstPtr(ptr39), p2, descr=<FieldP pyrlang.lib.base.BaseBIF.inst_caller 8>)
+338: i41 = int_sub_ovf(i19, 1)
guard_no_overflow(descr=<Guard0x102189f30>) [i0, p1, p2, i41, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p36, i19, p25, p23]
debug_merge_point(0, 0, '13 MOVE')
debug_merge_point(0, 0, '14 MOVE')
debug_merge_point(0, 0, '15 LINE')
debug_merge_point(0, 0, '16 CALL')
+351: i43 = int_sub(i0, 1)
+355: i45 = int_le(i43, 0)
guard_false(i45, descr=<Guard0x102189ec0>) [i43, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41, p36, i19, None, p23]
debug_merge_point(0, 0, '3 LABEL')
p48 = new_with_vtable(4297733088)
p50 = new_with_vtable(4297733088)
+387: setfield_gc(p50, p36, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p52 = new_with_vtable(4297733936)
+402: setfield_gc(p52, i19, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+406: setfield_gc(p50, p52, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+410: setfield_gc(p48, p50, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p54 = new_with_vtable(4297732952)
+425: setfield_gc(p54, 17, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+433: setfield_gc(p54, ConstPtr(ptr35), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+447: setfield_gc(p48, p54, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+474: setfield_gc(p23, p48, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+479: p56 = getfield_gc(p2, descr=<FieldP pyrlang.interpreter.interp.Process.inst_frame_cache 16>)
+483: guard_nonnull(p56, descr=<Guard0x102189e50>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+492: p57 = getfield_gc_pure(p56, descr=<FieldP pyrlang.interpreter.frame_cache.FrameCache.inst_cache 8>)
+496: guard_nonnull(p57, descr=<Guard0x102189de0>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+505: i58 = arraylen_gc(p57, descr=<ArrayP 8>)
+509: i60 = int_ge(i58, 1)
guard_true(i60, descr=<Guard0x102189d70>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+519: p62 = getarrayitem_gc_pure(p57, 0, descr=<ArrayP 8>)
+523: guard_nonnull(p62, descr=<Guard0x102189d00>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+532: i63 = getfield_gc_pure(p62, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+536: guard_value(i63, 17, descr=<Guard0x102189c90>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+546: p65 = getfield_gc_pure(p62, descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+550: guard_nonnull(p65, descr=<Guard0x102189c20>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+559: i67 = instance_ptr_eq(p65, ConstPtr(ptr66))
guard_true(i67, descr=<Guard0x102189bb0>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+578: p68 = getfield_gc_pure(p65, descr=<FieldP pyrlang.rpybeam.beam_code.CodeParser.inst_labelTable 96>)
+582: guard_nonnull(p68, descr=<Guard0x102189b40>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+591: i69 = arraylen_gc(p68, descr=<ArrayS 8>)
+595: i71 = int_ge(i69, 2)
guard_true(i71, descr=<Guard0x102189ad0>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+605: i73 = getarrayitem_gc_pure(p68, 1, descr=<ArrayS 8>)
+609: guard_value(i73, 3, descr=<Guard0x102189a60>) [i43, p23, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i41]
+619: jump(i43, p2, p1, p23, i41, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p25, p23, p48, p62, p68, descr=TargetToken(4318388416))
+676: --end of the loop--
[25da8076e561a] jit-log-opt-bridge}
[25da80fa2b624] {jit-log-opt-bridge
# bridge out of Guard 0x10210fd00 with 16 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i19, i20]
+59: p21 = force_token()
p23 = new_with_vtable(4297733088)
p25 = new_with_vtable(4297733088)
+152: setfield_gc(p25, p18, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p27 = new_with_vtable(4297733936)
+167: setfield_gc(p27, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+171: setfield_gc(p25, p27, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+175: setfield_gc(p23, p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p29 = new_with_vtable(4297732952)
+190: setfield_gc(p29, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+198: setfield_gc(p29, ConstPtr(ptr31), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+212: setfield_gc(p23, p29, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+238: setfield_gc(p17, p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+269: setfield_gc(p1, p21, descr=<FieldP pyrlang.interpreter.register.X_Register.vable_token 8>)
+273: guard_not_forced_2(descr=<Guard0x1021c4090>) [p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p1, i19]
+294: finish(ConstPtr(ptr32), descr=<DoneWithThisFrameDescrRef object at 0x1002d0a40>)
+400: --end of the loop--
[25da80fa495cc] jit-log-opt-bridge}
[25da83dd408ff] {jit-log-opt-bridge
# bridge out of Guard 0x1016b3f30 with 16 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, i17, p18, p19, i20]
+59: p21 = force_token()
p23 = new_with_vtable(4297733088)
p25 = new_with_vtable(4297733088)
+159: setfield_gc(p25, p19, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p27 = new_with_vtable(4297733936)
+175: setfield_gc(p27, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+179: setfield_gc(p25, p27, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+183: setfield_gc(p23, p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p29 = new_with_vtable(4297732952)
+198: setfield_gc(p29, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+206: setfield_gc(p29, ConstPtr(ptr31), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+220: setfield_gc(p23, p29, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+246: setfield_gc(p18, p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+277: setfield_gc(p1, p21, descr=<FieldP pyrlang.interpreter.register.X_Register.vable_token 8>)
+281: guard_not_forced_2(descr=<Guard0x1021c4170>) [p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p1, i17]
+295: finish(ConstPtr(ptr32), descr=<DoneWithThisFrameDescrRef object at 0x1002d0a40>)
+401: --end of the loop--
[25da83dd5dcea] jit-log-opt-bridge}
[25da868c72e00] {jit-log-opt-bridge
# bridge out of Guard 0x10215f1a0 with 16 ops
[i0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, i19, i20]
+59: p21 = force_token()
p23 = new_with_vtable(4297733088)
p25 = new_with_vtable(4297733088)
+159: setfield_gc(p25, p18, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p27 = new_with_vtable(4297733936)
+174: setfield_gc(p27, i20, descr=<FieldS pyrlang.interpreter.datatypes.number.W_IntObject.inst_intval 8>)
+185: setfield_gc(p25, p27, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+189: setfield_gc(p23, p25, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_next 8>)
p29 = new_with_vtable(4297732952)
+204: setfield_gc(p29, 23, descr=<FieldS pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_pc 16>)
+212: setfield_gc(p29, ConstPtr(ptr31), descr=<FieldP pyrlang.interpreter.datatypes.inner.W_AddrObject.inst_cp 8>)
+226: setfield_gc(p23, p29, descr=<FieldP pyrlang.interpreter.register.Abstract_Node.inst_val 16>)
+252: setfield_gc(p17, p23, descr=<FieldP pyrlang.interpreter.register.Y_Register.inst_current_node 8>)
+283: setfield_gc(p1, p21, descr=<FieldP pyrlang.interpreter.register.X_Register.vable_token 8>)
+287: guard_not_forced_2(descr=<Guard0x1021c4250>) [p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p1, i19]
+308: finish(ConstPtr(ptr32), descr=<DoneWithThisFrameDescrRef object at 0x1002d0a40>)
+414: --end of the loop--
[25da868cac502] jit-log-opt-bridge}
[25db09dbaaf42] {jit-backend-counts
entry 0:435348
TargetToken(4318388336):435348
TargetToken(4318388416):433322923
bridge 4318398576:165578102
TargetToken(4318389136):433055149
bridge 4318399808:95
bridge 4318601472:102230703
entry 1:1600
bridge 4318601360:165411563
bridge 4318403952:63181378
bridge 4318606736:39048276
bridge 4318769120:24132932
bridge 4329628576:24133087
entry 2:561
TargetToken(4329678352):3521267
TargetToken(4329678432):2341910
bridge 4329633504:14914765
bridge 4329632944:3520706
TargetToken(4329679712):3520706
bridge 4329768848:2176052
bridge 4329628016:5696469
TargetToken(4329681232):9217122
bridge 4329768288:1447098
bridge 4329956592:5696269
bridge 4318399472:267574
bridge 4318399696:165517
TargetToken(4329683632):267781
bridge 4318601584:165515
bridge 4318398240:101884
bridge 4330130640:102284
bridge 4318606288:63513
bridge 4318766432:62926
bridge 4330129968:62824
bridge 4329635072:23833
bridge 4318773040:8907
bridge 4329959840:5369
[25db09dbbd1df] jit-backend-counts}
